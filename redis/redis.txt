Redis Testing:

Redis is an open source, advanced key-value store.




On Ansible Host:
=============
$ cd /home/ansible/git-testing/ansible_prep_server

$ sudo vim /etc/hosts
+++
18.217.22.96 redis-server
+++

$ vim files/etc/hosts
+++
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

18.217.22.96 redis-server
+++

$ vim hosts
+++
[servers]
redis-server
+++


$ vim servers
+++
redis-server
+++


On Ansible Server:
==================
   Testing:
$ ansible -i hosts all --key-file "~/kube.pem" -u centos -m ping
$ ansible -i hosts all --key-file "~/kube.pem" -u centos -m ping --become-user=root
$ ansible -i hosts all --key-file "~/kube.pem" -u centos -m command -a 'hostname'

$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos set_hostname.yml -e server_hostname=redis-server

$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos update_etc_hosts.yml
$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos update_system.yml
$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos install_packages.yml
$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos disable_firewall.yml
$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos disable_selinux.yml
$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos ntp.yml

$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos create_swap.yml -e server_hostname=redis-server

$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos reboot.yml -e wait_port=22
   OR
$ for server in `cat servers`;
do ansible-playbook -i hosts --key-file "~/kube.pem" -u centos reboot_single.yml -e server_hostname=$server -e wait_port=22;
done




Confirm & Verify:
=================
$ ssh -i ~/kube.pem centos@redis-server


$ hostnamectl
$ cat /etc/hosts
$ sudo yum -y update
$ git
$ tree
$ vim i
$ sudo systemctl status firewalld.service
$ sestatus
$ uptime
$ ntpq -p
$ ntpstat


   Install Redis.
$ ansible-playbook -i hosts --key-file "~/kube.pem" -u centos redis.yml


$ redis-cli 
127.0.0.1:6379>

127.0.0.1:6379> ping
PONG

   Get Configuration:
127.0.0.1:6379> CONFIG GET *


   Get Specific Configuration:
127.0.0.1:6379> CONFIG GET loglevel 
1) "loglevel"
2) "notice"




      Data Types:

   Strings:
127.0.0.1:6379> SET name "devopsweb"
OK
127.0.0.1:6379> GET name
"devopsweb"


   Hashes:
127.0.0.1:6379> HMSET user:1 username devopsweb password devopsweb points 300

127.0.0.1:6379> HGETALL user:1


   Lists:
127.0.0.1:6379> lpush devopsweb argparse
(integer) 1
127.0.0.1:6379> lpush devopsweb bcrypt
(integer) 2
127.0.0.1:6379> lpush devopsweb csv
(integer) 3

127.0.0.1:6379> lrange devopsweb 0 10
1) "csv"
2) "bcrypt"
3) "argparse"



   Sets:
127.0.0.1:6379> sadd devopsweb email
(integer) 1
127.0.0.1:6379> sadd devopsweb flask
(integer) 1
127.0.0.1:6379> sadd devopsweb gzip
(integer) 1

127.0.0.1:6379> smembers devopsweb
1) "email"
2) "gzip"
3) "flask"



   Sorted Sets:
127.0.0.1:6379> zadd devopsweb 0 zlib
(integer) 1
127.0.0.1:6379> zadd devopsweb 0 yaml
(integer) 1
127.0.0.1:6379> zadd devopsweb 0 xml
(integer) 1

127.0.0.1:6379> ZRANGEBYSCORE devopsweb 0 1000
1) "xml"
2) "yaml"
3) "zlib"







   Delete a key:
127.0.0.1:6379> DEL <key>


