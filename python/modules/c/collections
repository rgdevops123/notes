   Example: collections.Counter
>>> from collections import Counter
>>> l = [1, 3, 2, 3, 5, 3]
>>> Counter(l)
Counter({3: 3, 1: 1, 2: 1, 5: 1})
>>> c = Counter(l)
>>> c[3]
3

   Example: collections.defaultdict



   Example: collections.OrderedDict



   Example: collections.namedtuple
from collections import namedtuple


class Point(namedtuple('Point', 'x y')):
    __slots__ = ()

    @property
    def hypot(self):
        return (self.x ** 2 + self.y ** 2) ** 0.5

    def __str__(self):
        return 'Point: x={0:.3f}  y={1:.3f}  hypot={2:.3f}'.format(self.x, self.y, self.hypot)

   NOTE: For String Formating=> 
        return 'Point: x=%6.3f  y=%6.3f  hypot=%6.3f' % (self.x, self.y, self.hypot)

>>> from testing import Point
>>> for p in Point(3, 4), Point(14, 5/7.):
...     print(p)
... 
Point: x=3.000  y=4.000  hypot=5.000
Point: x=14.000  y=0.714  hypot=14.018
